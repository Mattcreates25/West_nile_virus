ggplot::aes()
q()
library(dplyr)
library(ggplot2)
n     <- 200 # number of observations
bias  <- 4
slope <- 3.5
dot   <- `%*%` # defined for personal preference
x   <- rnorm(n) * 2
x_b <- cbind(x, rep(1, n))
y   <- bias + slope * x + rnorm(n)
df  <- data_frame(x = x,  y = y)
learning_rate <- 0.05
n_iterations  <- 100
theta         <- matrix(c(20, 20))
b0    <- vector("numeric", length = n_iterations)
b1    <- vector("numeric", length = n_iterations)
sse_i <- vector("numeric", length = n_iterations)
install.packages("dplyr")
install.packages("ggplot2")
q()
install.packages("readxl")
library(readxl)
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite("phyloseq")
source("https://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::available()
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
library(coda)
source("https://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
install.packages("devtools")
library("devtools")
devtools::install_github("benjjneb/dada2", ref="v1.16") # change the ref argument to get other versions
install.packages("path/to/dada2",
repos = NULL,
type = "source",
dependencies = c("Depends", "Suggests","Imports"))
library("dada2")
install.packages("dada2")
library(dada2)
conda list | grep ‘dada2’
library(BiocManager)
library("dada2")
library("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("benjjneb/dada2", ref="v1.16") # change the ref argument to get other versions
install.packages("devtools")
library("devtools")
install.packages("dada2")
install.packages("dada2")
library("dada2")
R.version
packageVersion("BiocInstaller")
packageVersion("ShortRead")
install.package('BiocInstaller')
library(BiocManager)
library("dada2")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("dada2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
BiocManager:: install(version = '3.11')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
library("dada2")
install.packages("foreign")
install.packages("foreign")
install.packages("spatial")
library("dada2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ShortRead", version = "3.11")
# Or you can use earlier versions of Biocondcutor, e.g. if you have a pre-3.6 version of R
BiocManager::install("additional_missing_package_1", version = "3.11")
# ... and so on
library("dada2")
? read.csv
install.packages("dada2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
library("dada2")
find.package("dada2")
install.packages("devtools")
library("devtools")
devtools::install_github("benjjneb/dada2", ref="v1.16")
library(Rcpp)
install.packages("dada2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2")
library('dada2')
setwd()
variants <- data.frame(caller=c("GatkHC", "FreeBayes", "BCF"),
SNPs=c(711, 673, 670),
Ins=c(79, 61, 49),
Del=c(57, 40, 32),
Mnp=c(0, 4, 0),
Total_variants=c(847, 778, 751))
head(variants)
variants
library(ggplot2)
Variant_plot <- ggplot(data = variants, aes = (x=caller, y=Total_variants)) +
geom_bar(stat="identity", width="0.5")
Variant_plot <- ggplot(data = variants, aes = (x=caller, y=Total_variants)) +
geom_bar(stat="count", width="0.5")
Variant_plot
Variant_plot <- ggplot(data = variants, aes = (x=caller, y=Total_variants))
Variant_plot <- ggplot(data = variants, aes = (x=caller, y=Total_variants))
Variant_plot <- ggplot(data=variants, aes =(x=caller, y=Total_variants))
ggplot(data=variants, aes =(x=caller, y=Total_variants)) +
geom_bar()
ggplot(data=variants, aes =(x=caller, y=Total_variants)) +
geom_bar()
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar()
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar(stat='count')
ggplot(data=variants, aes(x=caller, y=Total_variants))
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar(stat="count")
ggplot(data=variants, aes(x=caller, y=Total_variants))
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar(stat="identity")
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar(stat="identity", width = "0.5")
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar(stat="identity", width = 0.5)
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar(stat="identity", width = 0.25)
ggplot(data=variants, aes(x=caller, y=Total_variants, SNPs, Ins, Del, Mnp)) +
geom_bar(stat="identity", width = 0.25)
ggplot(data=variants, aes(x=caller)) +
geom_bar()
ggplot(data=variants, aes(x=caller.SNPs)) +
geom_bar()
ggplot(data=variants, aes(x=caller, y=Total_variants)) +
geom_bar(stat="identity", width = 0.25)
ggplot(data=variants, aes(x=caller, y=Total_variants, fill=SNPs)) +
geom_bar(stat="identity", width = 0.25)
caller = c(rep("GatkHC", 4), rep("FreeBayes", 4), rep("BCF", 4))
Type = rep(c("SNPs", "Ins", "Del", "MNps"), 3)
value = c(711, 79, 57, 0, 673, 61, 40, 4, 670, 49, 32, 0)
Variant = data.frame(caller, Type, value)
head(Variant)
Variant
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25)
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust= 1.5, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust= 1.5, size = 3.0, colour = 'white') +
theme_minimal()
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust= 1.5, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust= -0.3, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), hjust= -0.3, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), hjust= 1.3, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust= 1.3, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust= 1.5, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust= -0.5, size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), size = 3.0, colour = 'white')
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust =3, hjust= 0.5, size = 3.0, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust =1, hjust= 0.5, size = 3.0, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust =-1, hjust= 0.5, size = 3.0, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust =1, hjust= 0.5, size = 3.0, colour = 'white', position = "stack")
caller = c(rep("GatkHC", 3), rep("FreeBayes", 3), rep("BCF", 3))
Type = rep(c("SNPs", "Ins", "Del"), 3)
value = c(711, 79, 57, 673, 61, 40, 670, 49, 32)
Variant = data.frame(caller, Type, value)
Variant
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.25) +
geom_text(aes(label=value), vjust =1, hjust= 0.5, size = 3.0, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
geom_text(aes(label=value), vjust =1, hjust= 0.5, size = 3.5, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
geom_text(aes(label=value), vjust =0.5, hjust= 0.5, size = 3.5, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
geom_text(aes(label=value), vjust =1.5, hjust= 0.5, size = 3.5, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
geom_text(aes(label=value), vjust =1.2, hjust= 0.5, size = 3.5, colour = 'white', position = "stack")
ggplot(data= Variant, aes(x = caller, y = value, fill = Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
geom_text(aes(label=value), size = 3, position = position_stack(vjust = 0.5))
Variant_caller = c(rep("GatkHC", 3), rep("FreeBayes", 3), rep("BCF", 3))
Variant_Type = rep(c("SNPs", "Ins", "Del"), 3)
Count = c(711, 79, 57, 673, 61, 40, 670, 49, 32)
Variant = data.frame(Variant_caller, Variant_Type, Count)
Variant
ggplot(data= Variant, aes(x = Variant_caller, y = Count, fill = Variant_Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
geom_text(aes(label=Count), size = 3, position = position_stack(vjust = 0.5))
ggplot(data= Variant, aes(x = Variant_caller, y = Count, fill = Variant_Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
labs(title = "Number of variants called across different Variant Callers") +
geom_text(aes(label=Count), size = 3, position = position_stack(vjust = 0.5))
ggplot(data= Variant, aes(x = Variant_caller, y = Count, fill = Variant_Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
labs(title = "Number of variants called across different variant callers") +
geom_text(aes(label=Count), size = 3, position = position_stack(vjust = 0.5))
# Creating dataframe of variant statistics.
Variant_caller = c(rep("GatkHC", 3), rep("FreeBayes", 3), rep("BCF", 3))
Variant_Type = rep(c("SNPs", "Ins", "Del"), 3)
Count = c(711, 79, 57, 673, 61, 40, 670, 49, 32)
Variant = data.frame(Variant_caller, Variant_Type, Count)
Variant
# loading plotting package
library(ggplot2)
# Plotting a stacked barplot.
ggplot(data= Variant, aes(x = Variant_caller, y = Count, fill = Variant_Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
labs(title = "Number of variants called across different variant callers") +
geom_text(aes(label=Count), size = 3, position = position_stack(vjust = 0.5))
Variant_plot <- ggplot(data= Variant, aes(x = Variant_caller, y = Count, fill = Variant_Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
labs(title = "Number of variants called across different variant callers") +
geom_text(aes(label=Count), size = 3, position = position_stack(vjust = 0.5))
Variant_plot
# Creating dataframe of variant statistics.
Variant_caller = c(rep("GatkHC", 3), rep("FreeBayes", 3), rep("BCF", 3))
Variant_Type = rep(c("SNPs", "Ins", "Del"), 3)
Count = c(724, 79, 58, 673, 61, 40, 670, 49, 32)
Variant = data.frame(Variant_caller, Variant_Type, Count)
Variant
# loading plotting package
library(ggplot2)
# Plotting a stacked barplot.
Variant_plot <- ggplot(data= Variant, aes(x = Variant_caller, y = Count, fill = Variant_Type)) +
geom_bar(stat = "identity", position = "stack", width = 0.5) +
labs(title = "Number of variants called across different variant callers") +
geom_text(aes(label=Count), size = 3, position = position_stack(vjust = 0.5))
Variant_plot
grouped_new= iris %>% group_by(Species) %>% summarize(mean_sepal_width = mean(Sepal.Width), Sd_sepal_width= sd(Sepal.Width),
max_sepal = max(Sepal.Width), min_sepal= min(Sepal.Width))
library(dplyr)
#go into the correct working directory
setwd("~/WNV/results")
#load the library seqinr which has the function kaks
library(seqinr)
all_alignment= read.alignment(file = "all_alignment.fasta", format = "fasta", whole.header= T)
View(all_alignment)
